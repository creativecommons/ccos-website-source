_model: page
---
_template: page-with-toc.html
---
title: GitHub Repo Guidelines
---
description: This is a checklist for all public repositories hosted on the
[Creative Commons GitHub organization](https://github.com/creativecommons). Not
all repositories meet these criteria yet. Please notify us if a project you'd
like to work on does not meet this checklist by opening a GitHub issue
associated with the repository.
---
body:


## Organizational defaults

The following organizational defaults are automatically applied to all
repositories (per [Creating a default community health file - GitHub
Docs][health-files]). Most repositories _shouldn't_ have their own copies of
these files:
- [`.github/PULL_REQUEST_TEMPLATE.md`][pr-template]: Pull request template
  - All pull request templates _must_ include the full text of the [DCO][dco].
- [`.github/ISSUE_TEMPLATE/bug_report.md`][issue-template-bug]: Bug report
  issue template
- [`.github/ISSUE_TEMPLATE/feature_request.md`][issue-template-feature]:
  Feature request issue template
- [`CODE_OF_CONDUCT.md`][conduct]: Code of Conduct
  - [Adding a code of conduct to your project - GitHub Help][help-conduct]
- [`CONTRIBUTING.md`][contributing]: contributor guidelines
  - [Setting guidelines for repository contributors - GitHub
    Help][setting-guidelines]
- [`FUNDING.yml`][funding]: Displays a sponsor button
- [`SUPPORT.md`][support]: Documentation on how to get help

[health-files]: https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/creating-a-default-community-health-file
[pr-template]: https://github.com/creativecommons/.github/blob/main/.github/PULL_REQUEST_TEMPLATE.md
[dco]: https://developercertificate.org/
[issue-template-bug]: https://github.com/creativecommons/.github/blob/main/.github/ISSUE_TEMPLATE/bug_report.md
[issue-template-feature]: https://github.com/creativecommons/.github/blob/main/.github/ISSUE_TEMPLATE/feature_request.md
[conduct]: https://github.com/creativecommons/.github/blob/main/CODE_OF_CONDUCT.md
[help-conduct]: https://help.github.com/en/articles/adding-a-code-of-conduct-to-your-project
[contributing]: https://github.com/creativecommons/.github/blob/main/CONTRIBUTING.md
[setting-guidelines]: https://help.github.com/en/articles/setting-guidelines-for-repository-contributors
[funding]: https://github.com/creativecommons/.github/blob/main/FUNDING.yml
[support]: https://github.com/creativecommons/.github/blob/main/SUPPORT.md


## Required items

All GitHub repositories should have the following items to be considered fully
ready for external contributors.


### Files

- `/.github/CODEOWNERS`: Defined code owners
  - [About code owners - GitHub Help][about-owners]
- `/.cc-metadata.yml`: The standard [CC metadata YAML file](#cc-metadata-file).
- `/LICENSE`: license file.
- `/README.md`: repository information file
  - begin with an H1 heading identical to repository name followed by a
    repository description
  - Must document how to install and build the project locally and documents a
    high level overview of the project and code structure. It should also link
    to any other available documentation.
  - Must document the Code of Conduct. For example, see the [Code of
    Conduct][section-coc] `README.md` section in
    `creativecommons/index-dev-env`.
  - Must document Contributing. For example, see the
    [Contributing][section-contrib] `README.md` section in
    `creativecommons/index-dev-env`.

[about-owners]: https://help.github.com/en/articles/about-code-owners
[section-coc]: https://github.com/creativecommons/index-dev-env/blob/main/README.md#code-of-conduct
[section-contrib]: https://github.com/creativecommons/index-dev-env/blob/main/README.md#contributing


## Additional items

As applicable or appropriate, each repository should include:
- GitHub Actions for formatting, linting, styling, etc.
- GitHub Actions for unit tests


## Repository configuration

- Main page: About ⚙️ (Edit repository details)
  - Description should match `README.md`
  - Add appropriate Topics
  - Disable/Uncheck any of the "Include in home page" that are not relevant to
    the repository (ex. if no packages are provided, uncheck Packages).
- Settings: General
  - Features
    - Disable/Uncheck Wikis unless you are going to use that feature
    - Disable/Uncheck Discussions unless you are going to use that feature
    - Disable/Uncheck Projects unless you are going to use that feature
  - Pull Requests
    - Enable/check Automatically delete head branches
- Settings: Collaborators and teams
  - Ensure, at a minimum that the team in `/.github/CODEOWNERS` has write
    permissions


## Standard labels

All repositories must contain a set of standard labels, [documented
here](/contributing-code/repo-labels/), which comprise of common labels in
addition to repository-specific skill labels. You don't have to set these up
manually. The labels are [automatically
managed](https://github.com/creativecommons/ccos-scripts) on all Creative
Commons (CC) repositories, and so, must not be renamed.

Repositories may contain additional custom labels as well which will remain
unaffected by the sync. It is recommended that custom labels be explained in
the contribution guidelines for that project.


## Branch protections

Branch protections are automatically set up by CC team members via
[creativecommons/ccos-scripts](https://github.com/creativecommons/ccos-scripts).
By default, pushing directly to the *default branch* (ex. `main`) is disabled
and all pull requests require review by at least one person before merge.


## CC metadata file

Each repo should have a `.cc-metadata.yml` file in the root directory with the
following structure:

```yaml
# Whether this GitHub repo is for a CC-led engineering project
engineering_project: true
# Name of the repository/project in English
english_name: CC Catalog API
# All technologies used, sorted
technologies: Django, Django REST Framework, Elasticsearch, Python
# Whether this repository should be featured on the CC Open Source site's "Projects" page
featured: false
# Slack channel name (optional key)
slack: 'cc-dev-catalog'
```

This metadata file is used in the [Projects](/projects/) page. Repos that are
marked as non-engineering projects are not displayed in the page and repos
marked as featured as displayed at the top of the page. Repos should be marked
as featured if we are actively looking for community contributions and have the
bandwidth to review them quickly.

Repos without this metadata file are treated as `engineering_projects: true`,
`featured: false` and `slack: ""`. A default is necessary since it will take
time for us to clean up and add metadata to all our repos.
